services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend
    command: bash -c "python src/manage.py migrate && python src/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
    ports:
      - "8000:8000"

  celery:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: celery
    command: celery -A src worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - backend
      - rabbitmq
      - db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  db:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

  frontend:
    build:
      context: ./public
      dockerfile: ../Dockerfile.frontend
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./public:/app
    stdin_open: true
    tty: true

volumes:
  postgres_data:
